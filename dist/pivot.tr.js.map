{"version":3,"names":[],"mappings":"","sources":["pivot.tr.js"],"sourcesContent":["/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst callWithJQuery = function(pivotModule) {\n  if ((typeof exports === \"object\") && (typeof module === \"object\")) { // CommonJS\n    return pivotModule(require(\"jquery\"));\n  } else if ((typeof define === \"function\") && define.amd) { // AMD\n    return define([\"jquery\"], pivotModule);\n// Plain browser env\n  } else {\n    return pivotModule(jQuery);\n  }\n};\n\ncallWithJQuery(function($) {\n  const nf = $.pivotUtilities.numberFormat;\n  const tpl = $.pivotUtilities.aggregatorTemplates;\n  const r = $.pivotUtilities.renderers;\n  const gcr = $.pivotUtilities.gchart_renderers;\n  const d3r = $.pivotUtilities.d3_renderers;\n  const c3r = $.pivotUtilities.c3_renderers;\n\n  const frFmt = nf({thousandsSep: \".\", decimalSep: \",\"});\n  const frFmtInt = nf({digitsAfterDecimal: 0, thousandsSep: \".\", decimalSep: \",\"});\n  const frFmtPct = nf({digitsAfterDecimal: 2, scaler: 100, suffix: \"%\", thousandsSep: \".\", decimalSep: \",\"});\n\n  $.pivotUtilities.locales.tr = {\n\n    localeStrings: {\n      renderError: \"PivotTable sonuçlarını oluştuturken hata oluştu\",\n      computeError: \"PivotTable sonuçlarını işlerken hata oluştu\",\n      uiRenderError: \"PivotTable UI sonuçlarını oluştuturken hata oluştu\",\n      selectAll: \"Tümünü Seç\",\n      selectNone: \"Tümünü Bırak\",\n      tooMany: \"(listelemek için fazla)\",\n      filterResults: \"Sonuçları filtrele\",\n      totals: \"Toplam\",\n      vs: \"vs\",\n      by: \"ile\"\n    },\n\n    aggregators: {\n      \"Sayı\": tpl.count(frFmtInt),\n      \"Benzersiz değerler sayısı\": tpl.countUnique(frFmtInt),\n      \"Benzersiz değerler listesi\": tpl.listUnique(\", \"),\n      \"Toplam\": tpl.sum(frFmt),\n      \"Toplam (tam sayı)\": tpl.sum(frFmtInt),\n      \"Ortalama\": tpl.average(frFmt),\n      \"Min\": tpl.min(frFmt),\n      \"Maks\": tpl.max(frFmt),\n      \"Miktarların toplamı\": tpl.sumOverSum(frFmt),\n      \"%80 daha yüksek\": tpl.sumOverSumBound80(true, frFmt),\n      \"%80 daha düşük\": tpl.sumOverSumBound80(false, frFmt),\n      \"Toplam oranı (toplam)\": tpl.fractionOf(tpl.sum(), \"total\", frFmtPct),\n      \"Satır oranı (toplam)\": tpl.fractionOf(tpl.sum(), \"row\", frFmtPct),\n      \"Sütunun oranı (toplam)\": tpl.fractionOf(tpl.sum(), \"col\", frFmtPct),\n      \"Toplam oranı (sayı)\": tpl.fractionOf(tpl.count(), \"total\", frFmtPct),\n      \"Satır oranı (sayı)\": tpl.fractionOf(tpl.count(), \"row\", frFmtPct),\n      \"Sütunun oranı (sayı)\": tpl.fractionOf(tpl.count(), \"col\", frFmtPct)\n    },\n\n    renderers: {\n      \"Tablo\": r[\"Table\"],\n      \"Tablo (Çubuklar)\": r[\"Table Barchart\"],\n      \"İlgi haritası\": r[\"Heatmap\"],\n      \"Satır ilgi haritası\": r[\"Row Heatmap\"],\n      \"Sütun ilgi haritası\": r[\"Col Heatmap\"]\n    }\n  };\n  if (gcr) {\n    $.pivotUtilities.locales.tr.gchart_renderers = {\n      \"Çizgi Grafiği\": gcr[\"Line Chart\"],\n      \"Bar Grafiği\": gcr[\"Bar Chart\"],\n      \"Yığılmış Çubuk Grafik \": gcr[\"Stacked Bar Chart\"],\n      \"Alan Grafiği\": gcr[\"Area Chart\"]\n    };\n  }\n\n  if (d3r) {\n    $.pivotUtilities.locales.tr.d3_renderers =\n      {\"Hiyerarşik Alan Grafiği (Treemap)\": d3r[\"Treemap\"]};\n  }\n\n  if (c3r) {\n    $.pivotUtilities.locales.tr.c3_renderers = {\n      \"Çizgi Grafiği\": c3r[\"Line Chart\"],\n      \"Bar Grafiği\": c3r[\"Bar Chart\"],\n      \"Yığılmış Çubuk Grafik \": c3r[\"Stacked Bar Chart\"],\n      \"Alan Grafiği\": c3r[\"Area Chart\"]\n    };\n  }\n\n  return $.pivotUtilities.locales.tr;\n});\n\n"],"file":"pivot.tr.js"}