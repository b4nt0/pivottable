{"version":3,"names":[],"mappings":"","sources":["pivot.de.js"],"sourcesContent":["/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst callWithJQuery = function(pivotModule) {\n    if ((typeof exports === \"object\") && (typeof module === \"object\")) { // CommonJS\n        return pivotModule(require(\"jquery\"));\n    } else if ((typeof define === \"function\") && define.amd) { // AMD\n        return define([\"jquery\"], pivotModule);\n    // Plain browser env\n    } else {\n        return pivotModule(jQuery);\n    }\n};\n        \ncallWithJQuery(function($) {\n    const nf = $.pivotUtilities.numberFormat;\n    const tpl = $.pivotUtilities.aggregatorTemplates;\n\n    const frFmt =    nf({thousandsSep: \" \", decimalSep: \",\"});\n    const frFmtInt = nf({digitsAfterDecimal: 0, thousandsSep: \" \", decimalSep: \",\"});\n    const frFmtPct = nf({digitsAfterDecimal: 1, scaler: 100, suffix: \"%\", thousandsSep: \" \", decimalSep: \",\"});\n\n    return $.pivotUtilities.locales.de = { \n        localeStrings: {\n            renderError: \"Bei der Darstellung der Pivot-Tabelle ist ein Fehler aufgetreten.\",\n            computeError: \"Bei der Berechnung der Pivot-Tabelle ist ein Fehler aufgetreten.\",\n            uiRenderError: \"Bei der Darstellung Oberfläche der Pivot-Tabelle ist ein Fehler aufgetreten.\",\n            selectAll: \"Alles auswählen\",\n            selectNone: \"Nichts auswählen\",\n            tooMany: \"(zu viele für Liste)\",\n            filterResults: \"Ergebnisse filtern\",\n            totals: \"Gesamt\",\n            vs: \"gegen\",\n            by: \"pro\"\n        },\n\n        aggregators: { \n            \"Anzahl\":                       tpl.count(frFmtInt),\n            \"Anzahl eindeutiger Werte\":     tpl.countUnique(frFmtInt),\n            \"Liste eindeutiger Werte\":      tpl.listUnique(\", \"),\n            \"Summe\":                        tpl.sum(frFmt),\n            \"Ganzzahlige Summe\":\t\t\ttpl.sum(frFmtInt),\n            \"Durchschnitt\":                 tpl.average(frFmt),\n            \"Minimum\":                      tpl.min(frFmt),\n            \"Maximum\":                      tpl.max(frFmt),\n            \"Summe über Summe\":             tpl.sumOverSum(frFmt),\n            \"80% Obergrenze\":               tpl.sumOverSumBound80(true, frFmt),\n            \"80% Untergrenze\":        \t\ttpl.sumOverSumBound80(false, frFmt),\n            \"Summe als Anteil von Gesamt\":  tpl.fractionOf(tpl.sum(),   \"total\", frFmtPct),\n            \"Summe als Anteil von Zeile\":   tpl.fractionOf(tpl.sum(),   \"row\",   frFmtPct),\n            \"Summe als Anteil von Spalte\":  tpl.fractionOf(tpl.sum(),   \"col\",   frFmtPct),\n            \"Anzahl als Anteil von Gesamt\": tpl.fractionOf(tpl.count(), \"total\", frFmtPct),\n            \"Anzahl als Anteil von Zeile\":  tpl.fractionOf(tpl.count(), \"row\",   frFmtPct),\n            \"Anzahl als Anteil von Spalte\": tpl.fractionOf(tpl.count(), \"col\",   frFmtPct)\n        },\n\n        renderers: {\n            \"Tabelle\":                      $.pivotUtilities.renderers[\"Table\"],\n            \"Tabelle mit Balkendiagramm\":   $.pivotUtilities.renderers[\"Table Barchart\"],\n            \"Heatmap\":                      $.pivotUtilities.renderers[\"Heatmap\"],\n            \"Heatmap pro Zeile\":            $.pivotUtilities.renderers[\"Row Heatmap\"],\n            \"Heatmap pro Spalte\":           $.pivotUtilities.renderers[\"Col Heatmap\"]\n        }\n    };});\n"],"file":"pivot.de.js"}