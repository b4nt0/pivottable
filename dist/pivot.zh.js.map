{"version":3,"names":[],"mappings":"","sources":["pivot.zh.js"],"sourcesContent":["/*\r\n * decaffeinate suggestions:\r\n * DS102: Remove unnecessary code created because of implicit returns\r\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\r\n */\r\n// example: http://zhoulvjun.github.io/2016/02/08/pivottable/\r\n\r\nconst callWithJQuery = function(pivotModule) {\r\n    if ((typeof exports === \"object\") && (typeof module === \"object\")) { // CommonJS\r\n        return pivotModule(require(\"jquery\"));\r\n    } else if ((typeof define === \"function\") && define.amd) { // AMD\r\n        return define([\"jquery\"], pivotModule);\r\n    // Plain browser env\r\n    } else {\r\n        return pivotModule(jQuery);\r\n    }\r\n};\r\n        \r\ncallWithJQuery(function($) {\r\n    const nf = $.pivotUtilities.numberFormat;\r\n    const tpl = $.pivotUtilities.aggregatorTemplates;\r\n    const r = $.pivotUtilities.renderers;\r\n    const gcr = $.pivotUtilities.gchart_renderers;\r\n    const d3r = $.pivotUtilities.d3_renderers;\r\n    const c3r = $.pivotUtilities.c3_renderers;\r\n\r\n    const frFmt =    nf({thousandsSep: \",\", decimalSep: \".\"});\r\n    const frFmtInt = nf({digitsAfterDecimal: 0, thousandsSep: \",\", decimalSep: \".\"});\r\n    const frFmtPct = nf({digitsAfterDecimal: 2, scaler: 100, suffix: \"%\", thousandsSep: \",\", decimalSep: \".\"});\r\n\r\n    $.pivotUtilities.locales.zh = { \r\n\r\n        localeStrings: {\r\n            renderError: \"展示结果时出错。\",\r\n            computeError: \"计算结果时出错。\",\r\n            uiRenderError: \"展示界面时出错。\",\r\n            selectAll: \"选择全部\",\r\n            selectNone: \"全部不选\",\r\n            tooMany: \"(因数据过多而无法列出)\",\r\n            filterResults: \"输入值帮助筛选\",\r\n            totals: \"合计\",\r\n            vs: \"于\",\r\n            by: \"分组于\"\r\n        },\r\n\r\n        aggregators: {\r\n            \"频数\":                                     tpl.count(frFmtInt),\r\n            \"非重复值的个数\":            tpl.countUnique(frFmtInt),\r\n            \"列出非重复值\":               tpl.listUnique(\", \"),\r\n            \"求和\":                                         tpl.sum(frFmt),\r\n            \"求和后取整\":                             tpl.sum(frFmtInt),\r\n            \"平均值\":                                        tpl.average(frFmt),\r\n            \"中位数\":                                       tpl.median(frFmt),\r\n            \"方差\":                                     tpl.var(1, frFmt),\r\n            \"样本标准偏差\":                      tpl.stdev(1, frFmt),\r\n            \"最小值\":                                       tpl.min(frFmt),\r\n            \"最大值\":                                       tpl.max(frFmt),\r\n            \"第一\":                                     tpl.first(frFmt),\r\n            \"最后\":                                       tpl.last(frFmt),\r\n            \"两和之比\":                              tpl.sumOverSum(frFmt),\r\n            \"二项分布：置信度为80%时的区间上限\":                        tpl.sumOverSumBound80(true, frFmt),\r\n            \"二项分布：置信度为80%时的区间下限\":                        tpl.sumOverSumBound80(false, frFmt),\r\n            \"和在总计中的比例\":      tpl.fractionOf(tpl.sum(),   \"total\", frFmtPct),\r\n            \"和在行合计中的比例\":      tpl.fractionOf(tpl.sum(),   \"row\",   frFmtPct),\r\n            \"和在列合计中的比例\":     tpl.fractionOf(tpl.sum(),   \"col\",   frFmtPct),\r\n            \"频数在总计中的比例\":  tpl.fractionOf(tpl.count(), \"total\", frFmtPct),\r\n            \"频数在行合计中的比例\":  tpl.fractionOf(tpl.count(), \"row\",   frFmtPct),\r\n            \"频数在列合计中的比例\": tpl.fractionOf(tpl.count(), \"col\",   frFmtPct)\r\n        },\r\n\r\n        renderers: {\r\n            \"表格\": r[\"Table\"],\r\n            \"表格内柱状图\": r[\"Table Barchart\"],\r\n            \"热图\": r[\"Heatmap\"],\r\n            \"行热图\": r[\"Row Heatmap\"],\r\n            \"列热图\": r[\"Col Heatmap\"]\r\n        }\r\n    };\r\n            \r\n    if (gcr) {\r\n        $.pivotUtilities.locales.zh.gchart_renderers = {\r\n            \"折线图(g)\":            gcr[\"Line Chart\"],\r\n            \"柱形图(g)\":            gcr[\"Bar Chart\"],\r\n            \"堆栈柱形图(g)\": gcr[\"Stacked Bar Chart\"],\r\n            \"面积图(g)\":       gcr[\"Area Chart\"]\r\n        };\r\n        $.pivotUtilities.locales.zh.renderers = $.extend(\r\n            $.pivotUtilities.locales.zh.renderers,\r\n            $.pivotUtilities.locales.zh.gchart_renderers);\r\n    }\r\n\r\n    if (d3r) {\r\n        $.pivotUtilities.locales.zh.d3_renderers =\r\n            {\"树图\": d3r[\"Treemap\"]};\r\n        $.pivotUtilities.locales.zh.renderers = $.extend(\r\n            $.pivotUtilities.locales.zh.renderers,\r\n            $.pivotUtilities.locales.zh.d3_renderers);\r\n    }\r\n\r\n    if (c3r) {\r\n        $.pivotUtilities.locales.zh.c3_renderers = { \r\n            \"折线图\": c3r[\"Line Chart\"],\r\n            \"柱形图\": c3r[\"Bar Chart\"],\r\n            \"堆栈柱形图\": c3r[\"Stacked Bar Chart\"],\r\n            \"面积图\": c3r[\"Area Chart\"],\r\n            \"散点图\": c3r[\"Scatter Chart\"]\r\n        };\r\n        $.pivotUtilities.locales.zh.renderers = $.extend(\r\n            $.pivotUtilities.locales.zh.renderers,\r\n            $.pivotUtilities.locales.zh.c3_renderers);\r\n    }\r\n\r\n    return $.pivotUtilities.locales.zh;\r\n});\r\n"],"file":"pivot.zh.js"}