{"version":3,"names":[],"mappings":"","sources":["pivot.it.js"],"sourcesContent":["/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst callWithJQuery = function(pivotModule) {\n  if ((typeof exports === \"object\") && (typeof module === \"object\")) { // CommonJS\n    return pivotModule(require(\"jquery\"));\n  } else if ((typeof define === \"function\") && define.amd) { // AMD\n    return define([\"jquery\"], pivotModule);\n// Plain browser env\n  } else {\n    return pivotModule(jQuery);\n  }\n};\n\ncallWithJQuery(function($) {\n  const nf = $.pivotUtilities.numberFormat;\n  const tpl = $.pivotUtilities.aggregatorTemplates;\n\n  const frFmt =    nf({thousandsSep: \" \", decimalSep: \",\"});\n  const frFmtInt = nf({digitsAfterDecimal: 0, thousandsSep: \" \", decimalSep: \",\"});\n  const frFmtPct = nf({digitsAfterDecimal: 1, scaler: 100, suffix: \"%\", thousandsSep: \" \", decimalSep: \",\"});\n\n  return $.pivotUtilities.locales.it = {\n    localeStrings: {\n      renderError: \"Si è verificato un errore durante la creazione della tabella.\",\n      computeError: \"Si è verificato un errore di calcolo nella tabella.\",\n      uiRenderError: \"Si è verificato un errore durante il disegno di interfaccia della tabella pivot.\",\n      selectAll: \"Seleziona tutto\",\n      selectNone: \"Deseleziona tutto\",\n      tooMany: \"(troppi valori da visualizzare)\",\n      filterResults: \"Filtra i valori\",\n      apply: \"Applica\",\n      cancel: \"Annulla\",\n      totals: \"Totali\",\n      vs: \"su\",\n      by: \"da\"\n    },\n\n    aggregators: {\n      \"Numero\":                             tpl.count(frFmtInt),\n      \"Numero di valori unici\":             tpl.countUnique(frFmtInt),\n      \"Elenco di valori unici\":             tpl.listUnique(\", \"),\n      \"Somma\":                              tpl.sum(frFmt),\n      \"Somma intera\":                       tpl.sum(frFmtInt),\n      \"Media\":                              tpl.average(frFmt),\n      \"Minimo\":                             tpl.min(frFmt),\n      \"Massimo\":                            tpl.max(frFmt),\n      \"Rapporto\":                           tpl.sumOverSum(frFmt),\n      \"Limite superiore 80%\":               tpl.sumOverSumBound80(true, frFmt),\n      \"limite inferiore 80%\":               tpl.sumOverSumBound80(false, frFmt),\n      \"Somma proporzionale al totale\":      tpl.fractionOf(tpl.sum(),   \"total\", frFmtPct),\n      \"Somma proporzionale alla riga\":      tpl.fractionOf(tpl.sum(),   \"row\",   frFmtPct),\n      \"Somma proporzionale alla colonna\":   tpl.fractionOf(tpl.sum(),   \"col\",   frFmtPct),\n      \"Numero proporzionale al totale\":     tpl.fractionOf(tpl.count(), \"total\", frFmtPct),\n      \"Numero proporzionale alla riga\":     tpl.fractionOf(tpl.count(), \"row\",   frFmtPct),\n      \"Numero proporzionale alla colonna\":  tpl.fractionOf(tpl.count(), \"col\",   frFmtPct)\n    },\n\n    renderers: {\n      \"Tabella\":                           $.pivotUtilities.renderers[\"Table\"],\n      \"Tabella con grafico\":               $.pivotUtilities.renderers[\"Table Barchart\"],\n      \"Mappa di calore\":                   $.pivotUtilities.renderers[\"Heatmap\"],\n      \"Mappa di calore per righe\":         $.pivotUtilities.renderers[\"Row Heatmap\"],\n      \"Mappa di calore per colonne\":       $.pivotUtilities.renderers[\"Col Heatmap\"]\n    }\n  };});\n\n\n"],"file":"pivot.it.js"}