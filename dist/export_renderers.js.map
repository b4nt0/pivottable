{"version":3,"names":[],"mappings":"","sources":["export_renderers.js"],"sourcesContent":["/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst callWithJQuery = function(pivotModule) {\n    if ((typeof exports === \"object\") && (typeof module === \"object\")) { // CommonJS\n        return pivotModule(require(\"jquery\"));\n    } else if ((typeof define === \"function\") && define.amd) { // AMD\n        return define([\"jquery\"], pivotModule);\n    // Plain browser env\n    } else {\n        return pivotModule(jQuery);\n    }\n};\n\ncallWithJQuery($ => $.pivotUtilities.export_renderers = { \"TSV Export\"(pivotData, opts) {\n    let colKey, r;\n    const defaults = {localeStrings: {}};\n\n    opts = $.extend(true, {}, defaults, opts);\n\n    const rowKeys = pivotData.getRowKeys();\n    if (rowKeys.length === 0) { rowKeys.push([]); }\n    const colKeys = pivotData.getColKeys();\n    if (colKeys.length === 0) { colKeys.push([]); }\n    const {\n        rowAttrs\n    } = pivotData;\n    const {\n        colAttrs\n    } = pivotData;\n\n    const result = [];\n\n    let row = [];\n    for (let rowAttr of Array.from(rowAttrs)) {\n        row.push(rowAttr);\n    }\n    if ((colKeys.length === 1) && (colKeys[0].length === 0)) {\n        row.push(pivotData.aggregatorName);\n    } else {\n        for (colKey of Array.from(colKeys)) {\n            row.push(colKey.join(\"-\"));\n        }\n    }\n\n    result.push(row);\n\n    for (let rowKey of Array.from(rowKeys)) {\n        row = [];\n        for (r of Array.from(rowKey)) {\n            row.push(r);\n        }\n\n        for (colKey of Array.from(colKeys)) {\n            const agg = pivotData.getAggregator(rowKey, colKey);\n            if (agg.value() != null) {\n                row.push(agg.value());\n            } else {\n                row.push(\"\");\n            }\n        }\n        result.push(row);\n    }\n    let text = \"\";\n    for (r of Array.from(result)) {\n        text += r.join(\"\\t\")+\"\\n\";\n    }\n\n    return $(\"<textarea>\").text(text).css({\n            width: ($(window).width() / 2) + \"px\",\n            height: ($(window).height() / 2) + \"px\"});\n}\n});\n\n"],"file":"export_renderers.js"}